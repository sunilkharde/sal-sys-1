<div class="container">
    {{!-- <div style="display: flex; justify-content: space-between; align-items: center;">
        <h4 style=" margin-bottom: 20px;">Dealer Targets...</h4>
    </div> --}}

    <form id="form1" action="/custTarget/view" method="POST">
        {{!-- enctype="multipart/form-data" --}}
        {{!-- <div class="col-lg-12 border p-4"> --}}
            <div class="form-group row mb-3">
                <label for="year_select" class="col-sm-2 col-form-label text-end">Target Entry Year<span
                        style="color: red;">*</span></label>
                <div class="col-sm-2">
                    <select class="form-select" id="year_select" name="year_select">
                        {{!-- <option value="">Select Year</option> --}}
                        {{#each years}}
                        <option value="{{this}}" {{#if (eq this ../year_select)}}selected{{/if}}>{{this}}</option>
                        {{/each}}
                    </select>
                </div>
                <div class="col-md-2 item-align-start">
                    <button type="button" id="btnRefresh" class="btn btn-success" onclick="refreshData()">Refresh
                        Data</button>
                </div>
            </div>

            <div class="form-group row mb-3">
                <label for="customer_id" class="col-sm-2 col-form-label text-end">Dealer<span
                        style="color: red;">*</span></label>
                <div class="col-sm-4">
                    <div class="input-group">
                        <input hidden type="text" class="form-control" id="customer_id" name="customer_id"
                            value="{{custData.customer_id}}">
                        <input disabled type="text" class="form-control" id="customer_name" name="customer_name"
                            value="{{custData.customer_name}}" required>
                        <button class="btn btn-outline-info" type="button" id="btnCustomer" data-bs-toggle="modal"
                            data-bs-target="#customersModal2">
                            <i class="bi bi-list"></i></button>
                    </div>
                </div>

                <label for="mg_id" class="col-sm-2 col-form-label text-end">Sales Person</label>
                <div class="col-sm-4">
                    <div class="input-group">
                        <input hidden type="text" class="form-control" id="mg_id" name="mg_id"
                            value="{{custData.mg_id}}">
                        <input disabled type="text" class="form-control" id="mg_name" name="mg_name"
                            value="{{custData.mg_name}}">
                    </div>
                </div>

            </div>

            {{!--
        </div> --}}
        {{!-- <br> --}}

        <table class="table dataTable" id="custTargetTable" style="width:100%">
            <thead>
                <tr>
                    <th hidden>Seq</th>
                    <th hidden>BuId</th>
                    <th hidden>GroupId</th>
                    <th>BU</th>
                    <th>Group</th>
                    <th style="text-align: end;">Apr</th>
                    <th style="text-align: end;">May</th>
                    <th style="text-align: end;">Jun</th>
                    <th style="text-align: end;">Jul</th>
                    <th style="text-align: end;">Aug</th>
                    <th style="text-align: end;">Sep</th>
                    <th style="text-align: end;">Oct</th>
                    <th style="text-align: end;">Nov</th>
                    <th style="text-align: end;">Dec</th>
                    <th style="text-align: end;">Jan</th>
                    <th style="text-align: end;">Feb</th>
                    <th style="text-align: end;">Mar</th>
                    <th style="text-align: end;">Total</th>
                    <th style="text-align:left;">...</th>
                </tr>
            </thead>
            <tbody id="targetItemsBody"> {{!-- class="sticky-col" --}}
                {{#each targetData}}
                <tr>
                    <td hidden><input type="text" class="form-control" id="seq_sr" name="seq_sr[]"
                            value="{{this.seq_sr}}"></td>
                    <td hidden><input type="text" class="form-control" id="bu_id" name="bu_id[]" value="{{this.bu_id}}">
                    </td>
                    <td hidden><input type="text" class="form-control" id="group_id" name="group_id[]"
                            value="{{this.group_id}}"></td>
                    <td><input readonly style="width: 100px;background-color: rgb(235, 245, 234);" type="text"
                            class="form-control" id="bu_name" name="bu_name[]" value="{{this.bu_name}}"></td>
                    <td><input readonly style="width: 250px;text-wrap:nowrap; background-color: rgb(235, 245, 234);"
                            type="text" class="form-control" id="group_name" name="group_name[]"
                            value="{{this.group_name}}">
                    </td>
                    <td><input style="width: 101px;" type="number" class="form-control text-end" id="apr1" name="apr1[]"
                            value="{{this.apr1}}"></td>
                    <td><input style="width: 101px;" type="number" class="form-control text-end" id="may1" name="may1[]"
                            value="{{this.may1}}"></td>
                    <td><input style="width: 101px;" type="number" class="form-control text-end" id="jun1" name="jun1[]"
                            value="{{this.jun1}}"></td>
                    <td><input style="width: 101px;" type="number" class="form-control text-end" id="jul1" name="jul1[]"
                            value="{{this.jul1}}"></td>
                    <td><input style="width: 101px;" type="number" class="form-control text-end" id="aug1" name="aug1[]"
                            value="{{this.aug1}}"></td>
                    <td><input style="width: 101px;" type="number" class="form-control text-end" id="sep1" name="sep1[]"
                            value="{{this.sep1}}"></td>
                    <td><input style="width: 101px;" type="number" class="form-control text-end" id="oct1" name="oct1[]"
                            value="{{this.oct1}}"></td>
                    <td><input style="width: 101px;" type="number" class="form-control text-end" id="nov1" name="nov1[]"
                            value="{{this.nov1}}"></td>
                    <td><input style="width: 101px;" type="number" class="form-control text-end" id="dec1" name="dec1[]"
                            value="{{this.dec1}}"></td>
                    <td><input style="width: 101px;" type="number" class="form-control text-end" id="jan1" name="jan1[]"
                            value="{{this.jan1}}"></td>
                    <td><input style="width: 101px;" type="number" class="form-control text-end" id="feb1" name="feb1[]"
                            value="{{this.feb1}}"></td>
                    <td><input style="width: 101px;" type="number" class="form-control text-end" id="mar1" name="mar1[]"
                            value="{{this.mar1}}"></td>
                    <td><input readonly style="width:100px;background-color: rgb(235, 245, 234);" type="text"
                            class="form-control text-end" id="total" name="total[]" value="{{this.total}}">
                    </td>
                    <td>
                        <button type="button" id="removeItemBtn" onclick="removeSelectedItem(this)"
                            class="btn btn-danger"> <i class="bi bi-trash"></i>
                        </button>
                    </td>
                </tr>
                {{/each}}
            </tbody>
        </table>

        {{!-- <br> --}}
        <div class="col-md-3 d-flex justify-content-between">
            <button {{#isEqual user.user_role "Read" }} disabled {{/isEqual}} type="submit"
                class="btn btn-primary mx-1">Submit</button>
            <div class="col-sm-5">
                <button type="button" class="btn btn-secondary mx-1"
                    onclick="window.location.href='/custTarget/view'">Cancel</button>
            </div>
            <div class="col-sm-5">
                {{#isEqual user.user_role "Admin"}}
                <button type="button" id="btnDelete" class="btn btn-danger" onclick="deleteData()">
                    <i class="bi bi-trash"></i>&nbsp;&nbsp;Remove</button>
                {{!-- <a
                    href="/custTarget/delete?customer_id={{customer_id}}&year_select={{year_select}}&mg_name={{mg_name}}"
                    class="btn btn-danger"
                    onclick="return confirm('Are you sure remove all target data for this customer?')">
                    <i class="bi bi-trash"></i>&nbsp;&nbsp;Remove
                </a> --}}
                {{else}}
                {{!-- <button disabled type="button" id="btnDelete" class="btn btn-secondary">
                    <i class="bi bi-trash"></i>&nbsp;&nbsp;Remove</button> --}}
                <a href="#" class="btn btn-secondary" style="pointer-events:none;">
                    <i class="bi bi-trash"></i>&nbsp;&nbsp;Remove
                </a>
                {{/isEqual}}

            </div>
        </div>
    </form>

    <style>
        .table td {
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }
    </style>

    <script>
        $(document).ready(function () {
            /*$('#custTargetTable').dataTable({
                //pageLength: 10,
                //responsive: true,
                paging:false
                scrollX: true,
                //"order": [4, "desc"],
                "fixedColumns": {
                    leftColumns: 5,
                    rightColumns: 0,
                }
            });*/

            const dataTable = $("#custTargetTable").DataTable();
            dataTable.destroy();
            $("#custTargetTable").DataTable({
                "bDestroy": true,
                "order": [],
                "fixedHeader": true,
                paging: false,
                "searching": false,
                "scrollY": 400,
                "scrollX": true,
                "scrollCollapse": true,
                "fixedColumns": {
                    leftColumns: 5,
                    rightColumns: 2,
                },
                "borders": true
            });

        });
    </script>

    <script>
        function refreshData() {
            var customer_id = document.getElementById('customer_id').value;
            var year_select = document.getElementById('year_select').value;
            var mg_name = document.getElementById('mg_name').value;

            window.location.href = '/custTarget/view?customer_id=' + customer_id + '&year_select=' + year_select + '&mg_name=' + mg_name;
        }

        function deleteData() {
            var customer_id = document.getElementById('customer_id').value;
            var year_select = document.getElementById('year_select').value;
            var mg_name = document.getElementById('mg_name').value;

            // Ask for user confirmation
            var userConfirmed = confirm("Are you sure you want to delete this data?");

            if (userConfirmed) {
                window.location.href = '/custTarget/delete?customer_id=' + customer_id + '&year_select=' + year_select + '&mg_name=' + mg_name;
            } else {
                // User clicked cancel, do nothing or handle accordingly
            }
        }
    </script>

    <script>
        const targetItemsBody = document.getElementById("targetItemsBody");

        targetItemsBody.addEventListener("input", async (event) => {
            const target = event.target;

            if (target.matches("#apr1,#may1,#jun1,#jul1,#aug1,#sep1,#oct1,#nov1,#dec1,#jan1,#feb1,#mar1")) {

                const row = target.closest("tr");
                //const allowTypeVal = row.querySelector("#type").value;
                const apr1 = isNaN(parseFloat(row.querySelector("#apr1").value)) ? 0 : parseFloat(row.querySelector("#apr1").value);
                const may1 = isNaN(parseFloat(row.querySelector("#may1").value)) ? 0 : parseFloat(row.querySelector("#may1").value);
                const jun1 = isNaN(parseFloat(row.querySelector("#jun1").value)) ? 0 : parseFloat(row.querySelector("#jun1").value);
                const jul1 = isNaN(parseFloat(row.querySelector("#jul1").value)) ? 0 : parseFloat(row.querySelector("#jul1").value);
                const aug1 = isNaN(parseFloat(row.querySelector("#aug1").value)) ? 0 : parseFloat(row.querySelector("#aug1").value);
                const sep1 = isNaN(parseFloat(row.querySelector("#sep1").value)) ? 0 : parseFloat(row.querySelector("#sep1").value);
                const oct1 = isNaN(parseFloat(row.querySelector("#oct1").value)) ? 0 : parseFloat(row.querySelector("#oct1").value);
                const nov1 = isNaN(parseFloat(row.querySelector("#nov1").value)) ? 0 : parseFloat(row.querySelector("#nov1").value);
                const dec1 = isNaN(parseFloat(row.querySelector("#dec1").value)) ? 0 : parseFloat(row.querySelector("#dec1").value);
                const jan1 = isNaN(parseFloat(row.querySelector("#jan1").value)) ? 0 : parseFloat(row.querySelector("#jan1").value);
                const feb1 = isNaN(parseFloat(row.querySelector("#feb1").value)) ? 0 : parseFloat(row.querySelector("#feb1").value);
                const mar1 = isNaN(parseFloat(row.querySelector("#mar1").value)) ? 0 : parseFloat(row.querySelector("#mar1").value);

                rowTarget = apr1 + may1 + jun1 + jul1 + aug1 + sep1 + oct1 + nov1 + dec1 + jan1 + feb1 + mar1;
                console.log('change.... 2', rowTarget)
                row.querySelector("#total").value = rowTarget;

                // Calculate the total target
                const targetInputs = targetItemsBody.querySelectorAll("#total");
                let totalTarget = 0;
                targetInputs.forEach((input) => {
                    const inputValue = parseFloat(input.value);
                    if (!isNaN(inputValue)) {
                        totalTarget += inputValue;
                    }
                });
                //document.getElementById("totalTarget").value = totalAmount.toFixed(0);
            }

        });

        function removeSelectedItem(element) {
            const row = element.closest("tr");
            if (row.rowIndex === 1) {
                alert("First row can't be deleted!");
                return;
            }
            const userConfirmed = confirm("Are you sure you want to delete this row?");
            if (userConfirmed) {
                row.remove();
                //calculateTotal();
            }
        }

        document.addEventListener("DOMContentLoaded", () => {
            // Calculate the total target
            const targetInputs = targetItemsBody.querySelectorAll("#total");
            let totalTarget = 0;
            targetInputs.forEach((input) => {
                const inputValue = parseFloat(input.value);
                if (!isNaN(inputValue)) {
                    totalTarget += inputValue;
                }
            });
            //document.getElementById("totalTarget").value = totalAmount.toFixed(0);
        });


    </script>



</div>


{{> _lov-customers2}}