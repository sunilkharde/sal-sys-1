<div class="container py-1">
    <div class="row justify-content-center">
        <div class="col-12 col-lg-10 border rounded-3 p-2 shadow-sm bg-white">
            <!-- Header -->
            <div class="d-flex justify-content-between align-items-center flex-wrap mb-3">
                <h4 class="mb-2 mb-md-0 fw-semibold text-primary">Create Purchase Order</h4>
                <a href="/po/view" class="btn btn-outline-secondary btn-sm d-flex align-items-center">
                    <i class="bi bi-arrow-left me-1"></i> Back</a>
            </div>

            <form id="poForm" action="/po/create" method="post">
                <!-- Row 1 -->
                <div class="row g-3 mb-3">
                    <div class="col-sm-6 col-md-4">
                        <label for="po_date" class="form-label">PO Date</label>
                        <input readonly type="text" class="form-control" id="po_date" name="po_date"
                            value="{{momentDMY data.po_date}}">
                    </div>
                    <div class="col-sm-6 col-md-4">
                        <label for="po_no" class="form-label">PO No</label>
                        <input readonly type="text" class="form-control" id="po_no" name="po_no" value="{{data.po_no}}">
                    </div>
                </div>

                <!-- Dealer -->
                <div class="mb-3">
                    <label for="customer_id" class="form-label">Dealer Name <span class="text-danger">*</span></label>
                    <div class="input-group input-group">
                        <input type="hidden" id="customer_id" name="customer_id" value="{{data.customer_id}}">
                        <input readonly type="text" class="form-control" id="customer_name" name="customer_name"
                            value="{{data.customer_name}}">
                        <button class="btn btn-outline-info" type="button" id="btnCustomer" data-bs-toggle="modal"
                            data-bs-target="#customersModal" title="Select Customer">
                            <i class="bi bi-list"></i>
                        </button>
                    </div>
                </div>

                <!-- Business Unit and Expected Delivery -->
                <div class="row g-3 mb-4">
                    <div class="col-sm-6 col-md-4">
                        <label for="bu_id" class="form-label">Business Unit <span class="text-danger">*</span></label>
                        <input type="hidden" id="bu_id_hdn" name="bu_id_hdn" value="{{data.bu_id_hdn}}">
                        <input readonly type="text" class="form-control" id="bu_name" name="bu_name"
                            value="{{data.bu_name}}">
                    </div>

                    <div class="col-sm-6 col-md-4">
                        <label for="exp_date" class="form-label">Expected Delivery <span
                                class="text-danger">*</span></label>
                        <input type="date" class="form-control" id="exp_date" name="exp_date"
                            value="{{momentYMD data.exp_date}}" min="{{momentYMD data.minDate}}"
                            max="{{momentYMD data.maxDate}}" required>
                    </div>
                </div>

                <!-- Order Items -->
                <div class="border rounded-3 p-2 p-md-3 mb-4 bg-light">
                    <div class="d-flex justify-content-between align-items-center flex-wrap mb-2">
                        <label class="form-label fw-bold mb-0 text-success">Order Items</label>
                        {{!-- <button type="button" id="addItemBtn" class="btn btn-success btn-sm">
                            <i class="bi bi-plus-lg me-1"></i> Add Item
                        </button> --}}
                    </div>

                    <div class="table-responsive po-table">
                        <table class="table table-sm table-bordered align-middle mb-0" id="po_dtTable">
                            <thead class="table-success text-center">
                                <tr>
                                    <th class="col-sr">Sr</th>
                                    <th class="col-product">Product</th>
                                    <th class="col-qty">Qty</th>
                                    <th hidden class="col-rate">Rate</th>
                                    <th hidden class="col-amount">Amount</th>
                                    <th class="col-action">Action</th>
                                </tr>
                            </thead>
                            <tbody id="orderItemsBody">
                                <tr>
                                    <td>
                                        <input readonly type="text" class="form-control text-end fw-semibold" id="sr_no"
                                            name="sr_no[]" value="10" required>
                                    </td>
                                    <td>
                                        <select class="form-select" id="product_id" name="product_id[]"></select>
                                    </td>
                                    <td>
                                        <input type="number" class="form-control text-end" id="qty" name="qty[]" min="1"
                                            step="1" value="1" required>
                                    </td>
                                    <td hidden>
                                        <input type="number" class="form-control text-end" id="rate" name="rate[]"
                                            min="0" step="1" value="1">
                                    </td>
                                    <td hidden>
                                        <input readonly type="number" class="form-control text-end" id="amount"
                                            name="amount[]" min="0" step="1">
                                    </td>
                                    <td class="text-center">
                                        <button type="button" id="removeItemBtn" onclick="removeSelectedItem(this)"
                                            class="btn btn-outline-danger btn-sm">
                                            <i class="bi bi-trash"></i>
                                        </button>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>

                    <!-- Add Button Left + Total Right (Responsive, Single Line) -->
                    <div class="border-top pt-2 mt-2">
                        <div class="d-flex align-items-center justify-content-between flex-nowrap gap-2">
                            <!-- Add Item Button (Left) -->
                            <button type="button" id="addItemBtn"
                                class="btn btn-success btn-sm d-flex align-items-center flex-shrink-0">
                                <i class="bi bi-plus-lg me-1"></i> Add Item
                            </button>

                            <!-- Total Field (Right) -->
                            <div class="input-group input-group-sm total-box flex-shrink-0">
                                <span class="input-group-text fw-semibold bg-success text-white">Total</span>
                                <input readonly type="text" class="form-control text-end fw-bold" id="totalAmount">
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Buttons -->
                <div class="d-flex justify-content-start gap-2 flex-wrap">
                    <button {{#isEqual user.user_role "Read" }}disabled{{/isEqual}} type="submit" id="submitBtn"
                        class="btn btn-primary btn-sm d-flex align-items-center">
                        <i class="bi bi-check2-circle me-1"></i> Submit
                    </button>
                    <button type="button" class="btn btn-secondary btn-sm d-flex align-items-center"
                        onclick="window.location.href='/po/view'">
                        <i class="bi bi-x-circle me-1"></i> Cancel
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Customer Modal -->
{{> _lov-customers}}

<style>
    /* Make table header sticky with internal scroll */
    .po-table {
        max-height: calc(100vh - 380px);
        overflow-y: auto;
        overflow-x: auto;
    }

    /* Keep the header sticky within scrollable area */
    #po_dtTable thead th {
        position: sticky;
        top: 0;
        z-index: 2;
        background-color: #d1e7dd;
        /* match your design */
    }

    /* Responsive fixed-width table */
    #po_dtTable {
        table-layout: fixed;
        width: 100%;
        min-width: 600px;
        /* Base minimum width */
    }

    /* Keep table scrollable on smaller screens */
    .table-responsive {
        overflow-x: auto;
    }

    /* Text handling */
    #po_dtTable th,
    #po_dtTable td {
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
        vertical-align: middle;
    }

    /* Default widths (for mobile) */
    #po_dtTable .col-sr {
        width: 50px;
    }

    #po_dtTable .col-product {
        width: 200px;
        white-space: normal;
        word-wrap: break-word;
    }

    #po_dtTable .col-qty {
        width: 70px;
    }

    #po_dtTable .col-rate,
    #po_dtTable .col-amount {
        width: 80px;
    }

    #po_dtTable .col-action {
        width: 60px;
    }

    #po_dtTable thead th {
        position: sticky;
        top: 0;
        z-index: 2;
        background-color: #d1e7dd;
        /* Bootstrap success-light */
    }

    /* Medium screens (â‰¥576px) */
    @media (min-width: 576px) {
        #po_dtTable .col-sr {
            width: 60px;
        }

        #po_dtTable .col-product {
            width: 250px;
        }

        #po_dtTable .col-qty {
            width: 80px;
        }

        #po_dtTable .col-action {
            width: 60px;
        }
    }

    /* Large screens (â‰¥992px) */
    @media (min-width: 992px) {
        #po_dtTable {
            min-width: 800px;
        }

        #po_dtTable .col-sr {
            width: 70px;
        }

        #po_dtTable .col-product {
            width: 400px;
        }

        #po_dtTable .col-qty {
            width: 100px;
        }

        #po_dtTable .col-rate {
            width: 120px;
        }

        #po_dtTable .col-amount {
            width: 120px;
        }

        #po_dtTable .col-action {
            width: 60px;
        }
    }

    /* Optional: Better look for scroll on small devices */
    .table-responsive::-webkit-scrollbar {
        height: 6px;
    }

    .table-responsive::-webkit-scrollbar-thumb {
        background: #ccc;
        border-radius: 3px;
    }

    #addItemBtn i {
        font-size: 0.9rem;
    }

    #totalAmount {
        min-width: 100px;
    }

    /* Add + Total layout: keep them on one line for all devices */
    .total-box {
        width: 200px;
        /* fixed width for total field */
        min-width: 160px;
    }

    @media (max-width: 575.98px) {
        .total-box {
            width: 160px;
            /* slightly narrower on very small screens */
        }
    }

    /* Optional: light yellow background for total field for emphasis */
    #totalAmount {
        background-color: #fffbea;
        font-weight: 600;
        min-width: 100px;
    }

    /* Ensure both sides stay horizontally aligned */
    .d-flex.flex-nowrap {
        white-space: nowrap;
    }
</style>


<script>
    const dropdownProductID = document.getElementById('product_id');
    let isDropdownFilled = false;

    dropdownProductID.addEventListener("click", async function () {
        if (!isDropdownFilled) {
            await fillDropdownList(dropdownProductID);
            isDropdownFilled = true;
            btnCustomer.disabled = true;
            btnCustomer.className = "btn btn-outline-secondary btn-sm";
        }
    });

    async function fillDropdownList(dropdownList) {
        const bu_id = document.getElementById("bu_id_hdn");
        try {
            const response = await fetch(`/po/products-list?bu_id=${bu_id.value}`);
            const data = await response.json();
            const items = data.products_list;
            if (!Array.isArray(items)) throw new Error('Unexpected response format');
            dropdownList.innerHTML = '';
            items.forEach(item => {
                const option = document.createElement('option');
                option.value = item.product_id;
                option.textContent = item.product_name;
                dropdownList.appendChild(option);
            });
        } catch (error) {
            console.error(error);
        }
    }

    const btnCustomer = document.getElementById("btnCustomer");
    const orderItemsBody = document.getElementById("orderItemsBody");
    const addItemBtn = document.getElementById("addItemBtn");

    function updateTotal() {
        const amountInputs = orderItemsBody.querySelectorAll("#amount");
        let totalAmount = 0;
        amountInputs.forEach(input => totalAmount += parseFloat(input.value) || 0);
        document.getElementById("totalAmount").value = totalAmount.toFixed(2);
    }

    addItemBtn.addEventListener("click", function () {
        if (dropdownProductID.options.length < 1) {
            alert("There are no available products in the list. Please select the first-row product first.");
            return;
        }
        btnCustomer.disabled = true;
        btnCustomer.className = "btn btn-outline-secondary btn-sm";

        const lastRow = orderItemsBody.lastElementChild;
        const newRow = lastRow.cloneNode(true);
        newRow.querySelectorAll("input").forEach(input => input.value = "");
        const srNoValue = parseInt(lastRow.querySelector("#sr_no").value);
        newRow.querySelector("#sr_no").value = srNoValue + 10;
        newRow.querySelector('#rate').value = 1;
        orderItemsBody.appendChild(newRow);
        updateTotal();
    });

    orderItemsBody.addEventListener("change", (event) => {
        const target = event.target;
        if (target.matches("#qty, #rate")) {
            const row = target.closest("tr");
            const qty = parseFloat(row.querySelector("#qty").value) || 1;
            const rate = parseFloat(row.querySelector("#rate").value) || 1;
            row.querySelector("#amount").value = (qty * rate).toFixed(2);
            updateTotal();
        }
    });

    function removeSelectedItem(element) {
        const row = element.closest("tr");
        if (orderItemsBody.rows.length === 1) {
            alert("At least one row must remain!");
            return;
        }
        row.remove();
        updateTotal();
    }

    document.addEventListener("DOMContentLoaded", updateTotal);
</script>