<div class="container mt-1">
    <div class="row justify-content-center">
        <div class="col-lg-6 col-md-8">
            <div class="card shadow border-0">
                <div class="card-body p-4 p-md-5">
                    <!-- Header -->
                    <div class="text-center mb-4">
                        <div class="bg-light rounded-circle d-inline-flex p-3 mb-3">
                            <i class="bi bi-key-fill text-primary fs-2"></i>
                        </div>
                        <h2 class="card-title fw-bold text-primary mb-2">Reset Your Password</h2>
                        <p class="text-muted">Create a new secure password for your account</p>
                        
                        <!-- User Role Indicator -->
                        {{#if user.user_role}}
                        <div class="badge bg-info bg-opacity-10 text-info fs-7 mb-3">
                            <i class="bi bi-person-badge me-1"></i>
                            {{user.user_role}} Role
                        </div>
                        {{/if}}
                    </div>

                    <!-- Alert Messages -->
                    {{#if alert}}
                    <div class="alert alert-success alert-dismissible fade show d-flex align-items-center" role="alert">
                        <i class="bi bi-check-circle-fill me-2"></i>
                        <div>{{alert}}</div>
                        <button type="button" class="btn-close ms-auto" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                    {{/if}}

                    {{#if error}}
                    <div class="alert alert-danger alert-dismissible fade show d-flex align-items-center" role="alert">
                        <i class="bi bi-exclamation-triangle-fill me-2"></i>
                        <div>{{error}}</div>
                        <button type="button" class="btn-close ms-auto" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                    {{/if}}

                    <!-- Reset Password Form -->
                    <form method="post" action="/auth/reset-password" class="needs-validation" novalidate>
                        <!-- Email Field -->
                        <div class="mb-4">
                            <label for="email_id" class="form-label fw-semibold">
                                <i class="bi bi-envelope me-2"></i>Email Address
                            </label>
                            <input type="email" 
                                   class="form-control form-control-lg {{#isEqual user.user_role 'Admin'}}{{else}}bg-light{{/isEqual}}" 
                                   id="email_id" 
                                   name="email_id" 
                                   value="{{data.email_id}}"
                                   {{#isEqual user.user_role "Admin"}}{{else}}readonly{{/isEqual}}
                                   required
                                   autocomplete="email">
                            {{#isEqual user.user_role "Admin"}}
                            <div class="form-text mt-1">
                                <i class="bi bi-pencil me-1"></i>
                                Enter the user's email address to reset their password
                            </div>
                            {{else}}
                            <div class="form-text mt-1">
                                <i class="bi bi-lock me-1"></i>
                                Your account email (read-only)
                            </div>
                            {{/isEqual}}
                        </div>

                        <!-- New Password -->
                        <div class="mb-4">
                            <label for="password" class="form-label fw-semibold">
                                <i class="bi bi-shield-lock me-2"></i>New Password
                            </label>
                            <div class="input-group">
                                <input type="password" 
                                       class="form-control form-control-lg" 
                                       name="password" 
                                       id="password"
                                       value="" 
                                       placeholder="Enter your new password"
                                       pattern="^(?=.*[a-z]+)(?=.*[A-Z]+)(?=.*\d)(?=.*[@#$%^&+=]).{6,20}$"
                                       required
                                       autocomplete="new-password">
                                <button class="btn btn-outline-secondary" type="button" id="password-toggle" aria-label="Toggle password visibility">
                                    <i class="bi bi-eye"></i>
                                </button>
                            </div>
                            <div class="form-text mt-1">
                                <i class="bi bi-info-circle me-1"></i>
                                Password must be 6-20 characters with uppercase, lowercase, number, and special character (@#$%^&+=)
                            </div>
                            <div class="alert alert-warning mt-2 py-2 d-none" id="password-paste-error">
                                <i class="bi bi-exclamation-triangle me-2"></i>
                                Pasting is not allowed in the password field
                            </div>
                        </div>

                        <!-- Confirm Password -->
                        <div class="mb-4">
                            <label for="confPassword" class="form-label fw-semibold">
                                <i class="bi bi-shield-check me-2"></i>Confirm Password
                            </label>
                            <div class="input-group">
                                <input type="password" 
                                       class="form-control form-control-lg" 
                                       id="confPassword" 
                                       name="confPassword"
                                       value="" 
                                       placeholder="Confirm your new password"
                                       pattern="^(?=.*[a-z]+)(?=.*[A-Z]+)(?=.*\d)(?=.*[@#$%^&+=]).{6,20}$"
                                       required
                                       autocomplete="new-password">
                                <button class="btn btn-outline-secondary" type="button" id="confPassword-toggle" aria-label="Toggle password visibility">
                                    <i class="bi bi-eye"></i>
                                </button>
                            </div>
                            <div class="alert alert-warning mt-2 py-2 d-none" id="confPassword-paste-error">
                                <i class="bi bi-exclamation-triangle me-2"></i>
                                Pasting is not allowed in the password field
                            </div>
                        </div>

                        <!-- Password Requirements -->
                        <div class="card bg-light border-0 mb-4">
                            <div class="card-body py-3">
                                <h6 class="card-title mb-3">
                                    <i class="bi bi-list-check me-2"></i>Password Requirements
                                </h6>
                                <div class="row">
                                    <div class="col-md-6">
                                        <ul class="list-unstyled mb-0 small">
                                            <li class="mb-1"><i class="bi bi-check-circle text-success me-2"></i>6-20 characters long</li>
                                            <li class="mb-1"><i class="bi bi-check-circle text-success me-2"></i>At least one uppercase letter</li>
                                        </ul>
                                    </div>
                                    <div class="col-md-6">
                                        <ul class="list-unstyled mb-0 small">
                                            <li class="mb-1"><i class="bi bi-check-circle text-success me-2"></i>At least one lowercase letter</li>
                                            <li class="mb-1"><i class="bi bi-check-circle text-success me-2"></i>At least one number & special character</li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Submit Button -->
                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-primary fw-semibold py-3">
                                <i class="bi bi-arrow-clockwise me-2"></i>
                                Reset Password
                            </button>
                        </div>
                    </form>

                    <!-- Back to Login -->
                    <div class="text-center mt-4 pt-3 border-top">
                        <p class="text-muted mb-0">
                            Remember your password?
                            <a href="/auth/login" class="text-decoration-none fw-semibold">Back to Sign In</a>
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Password toggle functionality
        function setupPasswordToggle(toggleId, fieldId) {
            const toggle = document.getElementById(toggleId);
            const field = document.getElementById(fieldId);
            
            if (toggle && field) {
                toggle.addEventListener('click', function() {
                    const type = field.type === 'password' ? 'text' : 'password';
                    field.type = type;
                    
                    const icon = toggle.querySelector('i');
                    icon.className = type === 'password' ? 'bi bi-eye' : 'bi bi-eye-slash';
                    
                    // Update aria-label
                    this.setAttribute('aria-label', 
                        type === 'password' ? 'Show password' : 'Hide password');
                });
            }
        }

        // Setup both password toggles
        setupPasswordToggle('password-toggle', 'password');
        setupPasswordToggle('confPassword-toggle', 'confPassword');

        // Paste prevention with better UX
        function setupPastePrevention(inputId, errorId) {
            const input = document.getElementById(inputId);
            const error = document.getElementById(errorId);
            
            if (input && error) {
                input.addEventListener('paste', function(e) {
                    e.preventDefault();
                    error.classList.remove('d-none');
                    
                    // Auto-hide error after 3 seconds
                    setTimeout(() => {
                        error.classList.add('d-none');
                    }, 3000);
                });

                // Hide error when user starts typing
                input.addEventListener('input', function() {
                    error.classList.add('d-none');
                });
            }
        }

        setupPastePrevention('password', 'password-paste-error');
        setupPastePrevention('confPassword', 'confPassword-paste-error');

        // Form validation
        const form = document.querySelector('.needs-validation');
        if (form) {
            form.addEventListener('submit', function(event) {
                if (!form.checkValidity()) {
                    event.preventDefault();
                    event.stopPropagation();
                }
                form.classList.add('was-validated');
            }, false);
        }

        // Real-time password confirmation validation
        const password = document.getElementById('password');
        const confPassword = document.getElementById('confPassword');

        function validatePasswordMatch() {
            if (password.value && confPassword.value) {
                if (password.value !== confPassword.value) {
                    confPassword.setCustomValidity('Passwords do not match');
                    confPassword.classList.add('is-invalid');
                } else {
                    confPassword.setCustomValidity('');
                    confPassword.classList.remove('is-invalid');
                }
            }
        }

        if (password && confPassword) {
            password.addEventListener('input', validatePasswordMatch);
            confPassword.addEventListener('input', validatePasswordMatch);
        }

        // Password strength indicator (optional enhancement)
        password.addEventListener('input', function() {
            const strengthIndicator = document.getElementById('password-strength');
            if (strengthIndicator) {
                const strength = calculatePasswordStrength(this.value);
                updateStrengthIndicator(strengthIndicator, strength);
            }
        });

        function calculatePasswordStrength(password) {
            let strength = 0;
            if (password.length >= 6) strength++;
            if (password.match(/[a-z]/)) strength++;
            if (password.match(/[A-Z]/)) strength++;
            if (password.match(/[0-9]/)) strength++;
            if (password.match(/[@#$%^&+=]/)) strength++;
            return strength;
        }

        function updateStrengthIndicator(indicator, strength) {
            const colors = ['danger', 'danger', 'warning', 'info', 'success'];
            const texts = ['Very Weak', 'Weak', 'Fair', 'Good', 'Strong'];
            indicator.className = `text-${colors[strength]} small fw-semibold`;
            indicator.innerHTML = `<i class="bi bi-shield me-1"></i>Password Strength: ${texts[strength]}`;
        }
    });
</script>

<style>
    .card {
        border-radius: 1rem;
        background: linear-gradient(145deg, #ffffff 0%, #f8f9fa 100%);
    }
    
    .form-control:focus {
        border-color: #0d6efd;
        box-shadow: 0 0 0 0.2rem rgba(13, 110, 253, 0.15);
    }
    
    .form-control:read-only {
        background-color: #f8f9fa;
        border-color: #e9ecef;
    }
    
    .btn-primary {
        background: linear-gradient(135deg, #0d6efd 0%, #6610f2 100%);
        border: none;
        transition: all 0.3s ease;
    }
    
    .btn-primary:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(13, 110, 253, 0.3);
    }
    
    .bg-light.rounded-circle {
        background: linear-gradient(135deg, #e3f2fd 0%, #bbdefb 100%) !important;
    }
    
    .fs-7 {
        font-size: 0.875rem !important;
    }
    
    /* Responsive adjustments */
    @media (max-width: 768px) {
        .card-body {
            padding: 2rem 1.5rem !important;
        }
        
        .form-control-lg {
            font-size: 16px; /* Prevents zoom on iOS */
        }
    }
</style>