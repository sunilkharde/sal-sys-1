<div class="container mt-1">
    <div class="row justify-content-center">
        <div class="col-lg-6 col-md-8 col-sm-12">
            <div class="card shadow border-0">
                <div class="card-body p-4 p-md-5">
                    <!-- Header -->
                    <div class="text-center mb-4">
                        <div class="bg-light rounded-circle d-inline-flex p-3 mb-3">
                            <i class="bi bi-key text-warning fs-2"></i>
                        </div>
                        <h2 class="card-title fw-bold text-warning mb-2">Set New Password</h2>
                        <p class="text-muted">Create a strong new password for your account</p>
                    </div>

                    {{#if alert}}
                    <div class="alert alert-danger alert-dismissible fade show" role="alert">
                        <i class="bi bi-exclamation-triangle-fill me-2"></i>
                        {{alert}}
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                    {{/if}}

                    <form action="/auth/forgot-password/reset" method="POST" class="needs-validation" novalidate>
                        <input type="hidden" name="email_id" value="{{email_id}}">
                        <input type="hidden" name="mobile_no" value="{{mobile_no}}">

                        <div class="mb-3">
                            <label for="password" class="form-label fw-semibold">
                                <i class="bi bi-lock me-2"></i>New Password
                            </label>
                            <div class="input-group input-group-lg">
                                <span class="input-group-text bg-light">
                                    <i class="bi bi-key"></i>
                                </span>
                                <input type="password" class="form-control" id="password" name="password"
                                    placeholder="Enter new password" minlength="6" required>
                                <button class="btn btn-outline-secondary" type="button" id="password-toggle">
                                    <i class="bi bi-eye"></i>
                                </button>
                                <div class="invalid-feedback">
                                    Password must be at least 6 characters long.
                                </div>
                            </div>
                            <div class="form-text">
                                <i class="bi bi-info-circle me-1"></i>
                                Minimum 6 characters
                            </div>
                        </div>

                        <div class="mb-4">
                            <label for="confPassword" class="form-label fw-semibold">
                                <i class="bi bi-lock-fill me-2"></i>Confirm New Password
                            </label>
                            <div class="input-group input-group-lg">
                                <span class="input-group-text bg-light">
                                    <i class="bi bi-key-fill"></i>
                                </span>
                                <input type="password" class="form-control" id="confPassword" name="confPassword"
                                    placeholder="Confirm new password" minlength="6" required>
                                <button class="btn btn-outline-secondary" type="button" id="confPassword-toggle">
                                    <i class="bi bi-eye"></i>
                                </button>
                                <div class="invalid-feedback">
                                    Please confirm your password.
                                </div>
                            </div>
                        </div>

                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-warning btn-lg fw-semibold py-3">
                                <i class="bi bi-check-circle me-2"></i>
                                Reset Password
                            </button>
                        </div>
                    </form>

                    <div class="text-center mt-4">
                        <a href="/auth/login" class="text-decoration-none">
                            <i class="bi bi-arrow-left me-1"></i>Back to Login
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Password toggle functionality
        const passwordToggle = document.getElementById('password-toggle');
        const passwordField = document.getElementById('password');
        const confPasswordToggle = document.getElementById('confPassword-toggle');
        const confPasswordField = document.getElementById('confPassword');

        // Toggle main password
        if (passwordToggle && passwordField) {
            passwordToggle.addEventListener('click', function () {
                const type = passwordField.type === 'password' ? 'text' : 'password';
                passwordField.type = type;
                const icon = passwordToggle.querySelector('i');
                icon.className = type === 'password' ? 'bi bi-eye' : 'bi bi-eye-slash';
            });
        }

        // Toggle confirm password
        if (confPasswordToggle && confPasswordField) {
            confPasswordToggle.addEventListener('click', function () {
                const type = confPasswordField.type === 'password' ? 'text' : 'password';
                confPasswordField.type = type;
                const icon = confPasswordToggle.querySelector('i');
                icon.className = type === 'password' ? 'bi bi-eye' : 'bi bi-eye-slash';
            });
        }

        // Password confirmation validation
        const form = document.querySelector('.needs-validation');
        if (form) {
            form.addEventListener('submit', function (event) {
                const password = document.getElementById('password').value;
                const confPassword = document.getElementById('confPassword').value;

                if (password !== confPassword) {
                    event.preventDefault();
                    event.stopPropagation();
                    alert('Password and Confirm Password do not match!');
                    return;
                }

                if (!form.checkValidity()) {
                    event.preventDefault();
                    event.stopPropagation();
                }

                form.classList.add('was-validated');
            }, false);
        }

        // Real-time password match validation
        const passwordFields = [passwordField, confPasswordField];
        passwordFields.forEach(field => {
            field?.addEventListener('input', function () {
                const password = document.getElementById('password').value;
                const confPassword = document.getElementById('confPassword').value;

                if (confPassword && password !== confPassword) {
                    confPasswordField.classList.add('is-invalid');
                } else {
                    confPasswordField.classList.remove('is-invalid');
                }
            });
        });

        // Auto-hide alerts
        const alerts = document.querySelectorAll('.alert');
        alerts.forEach(alert => {
            setTimeout(() => {
                const bsAlert = new bootstrap.Alert(alert);
                bsAlert.close();
            }, 5000);
        });
    });
</script>

<style>
    .card {
        border-radius: 1rem;
        background: linear-gradient(145deg, #ffffff 0%, #f8f9fa 100%);
    }

    .form-control:focus {
        border-color: #ffc107;
        box-shadow: 0 0 0 0.2rem rgba(255, 193, 7, 0.15);
    }

    .btn-warning {
        background: linear-gradient(135deg, #ffc107 0%, #fd7e14 100%);
        border: none;
        color: #000;
        transition: all 0.3s ease;
    }

    .btn-warning:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(255, 193, 7, 0.3);
        color: #000;
    }
</style>