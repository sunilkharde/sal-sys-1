<!DOCTYPE html>
<html>

<head>
  <title>Display User Location on Google Map</title>
  {{!--
  <script src="https://maps.googleapis.com/maps/api/js?key={{googleApiKey}}"></script> --}}
</head>

<body>
  {{!-- <form action="/locationCur" method="post"> --}}
    <button id="getLocationButton">Get Location</button>
    <div id="map" style="height: 500px;"> </div>
    <div id="placeName"></div>



    <button type="submit" class="btn btn-primary">Register</button>
    {{!--
  </form> --}}

  <script>
    function initMap() {
      const map = new google.maps.Map(document.getElementById('map'), {
        //center: { lat: -34.397, lng: 150.644 },
        zoom: 10,
      });

      const getLocationButton = document.getElementById('getLocationButton');
      const placeNameDiv = document.getElementById('placeName');

      getLocationButton.addEventListener('click', () => {
        if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(
            async (position) => {
              const userLocation = {
                lat: position.coords.latitude,
                lng: position.coords.longitude,
              };

              // Place a marker at the user's location on the map
              new google.maps.Marker({
                position: userLocation,
                map: map,
                title: 'Your Location',
              });

              // Center the map on the user's location
              map.setCenter(userLocation);

              // Get place name using reverse geocoding
              const geocoder = new google.maps.Geocoder();
              const latlng = new google.maps.LatLng(userLocation.lat, userLocation.lng);
              //const latlng = new google.maps.LatLng(19.51718, 74.19813);
              //const latlng = new google.maps.LatLng(40.712776, -74.005974);

              try {
                const response = await geocoder.geocode({ location: latlng });
                console.log('response.... ', response);

                if (response.results && response.results.length > 0) {
                  const firstResult = response.results[0];
                  let cityName = 'City name not found.';

                  for (const component of firstResult.address_components) {
                    if (component.types.includes('locality')) {
                      console.log('component... ', component);
                      cityName = component.long_name;
                      break;
                    }
                  }

                  placeNameDiv.textContent = `City Name: ${cityName}`;
                } else {
                  placeNameDiv.textContent = 'No results found.';
                }
              } catch (error) {
                console.error('Geocoding error:', error);
                placeNameDiv.textContent = 'Error fetching city name.';
              }

            },
            (error) => {
              console.error(error);
            }

          );
        } else {
          console.error('Geolocation is not supported by this browser.');
        }
      });
    }
  </script>

  <script async defer src="https://maps.googleapis.com/maps/api/js?key={{googleApiKey}}&callback=initMap">
  </script>


</body>

</html>